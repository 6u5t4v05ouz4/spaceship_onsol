import{P as n}from"./phaser-CprFsQX7.js";import"./phaser-Dt4UB6eP.js";class y extends n.Scene{constructor(){super("GameplaySimulation"),this.simulationSpeed=1,this.elements={ship:null,enemies:[],meteors:[],bullets:[],explosions:[],planets:[]},this.lastFireTime=0}preload(){this.load.setPath(""),this.load.atlas("ship","/assets/images/01.png","/assets/images/01.json"),this.load.image("ship_idle","/assets/images/idle.png"),this.load.atlas("enemy","/assets/images/02.png","/assets/images/02.json"),this.load.atlas("meteoro","/assets/images/meteoro.png","/assets/images/meteoro.json"),this.load.atlas("explosion","/assets/images/explosion.png","/assets/images/explosion.json"),this.load.atlas("minibullet","/assets/images/minibullet.png","/assets/images/minibullet.json"),this.load.atlas("planets","/assets/background/planets.png","/assets/background/planets.json"),this.load.image("stars","/assets/background/stars.jpeg"),this.load.audio("bullet_sound","/assets/sounds_effects/bullet.mp3"),this.load.audio("explosion_sound","/assets/sounds_effects/explosion.mp3")}create(){this.physics.world.setBounds(-2e3,-2e3,4e3,4e3),this.createBackground(),this.createAnimations(),this.createShip(),this.createEnemies(),this.createMeteors(),this.createPlanets(),this.setupCollisions(),this.startSimulation(),console.log("üéÆ Simula√ß√£o de gameplay iniciada")}createBackground(){const e=this.scale.width,t=this.scale.height;this.add.rectangle(0,0,e,t,0).setOrigin(.5).setDepth(-10);const a=this.add.tileSprite(0,0,e*2,t*2,"stars");a.setOrigin(.5).setDepth(-9).setAlpha(.8),this.starsBg=a;const s=Math.floor(e*t/1e4);for(let l=0;l<s;l++){const i=n.Math.Between(-e/2,e/2),r=n.Math.Between(-t/2,t/2),m=this.add.rectangle(i,r,1,1,16777215);m.setDepth(-8),m.setAlpha(n.Math.FloatBetween(.3,1))}}createAnimations(){this.anims.create({key:"ship_thrust",frames:this.anims.generateFrameNames("ship",{prefix:"01 ",start:0,end:1,suffix:".aseprite"}),frameRate:10,repeat:-1}),this.anims.create({key:"enemy_thrust",frames:this.anims.generateFrameNames("enemy",{prefix:"02 ",start:0,end:1,suffix:".aseprite"}),frameRate:10,repeat:-1}),this.anims.create({key:"meteoro_anim",frames:[{key:"meteoro",frame:"meteoro 0.aseprite"},{key:"meteoro",frame:"meteoro 1.aseprite"}],frameRate:8,repeat:-1});const e=this.textures.get("explosion").getFrameNames().filter(t=>t!=="__BASE").sort((t,a)=>{const s=t.match(/(\d+)/g),l=a.match(/(\d+)/g),i=s?parseInt(s[s.length-1],10):0,r=l?parseInt(l[l.length-1],10):0;return i-r}).map(t=>({key:"explosion",frame:t}));this.anims.create({key:"explosion_anim",frames:e,frameRate:15,repeat:0}),this.anims.create({key:"minibullet_anim",frames:[{key:"minibullet",frame:"minibullet 0.aseprite"},{key:"minibullet",frame:"minibullet 1.aseprite"}],frameRate:12,repeat:-1})}createShip(){this.elements.ship=this.physics.add.sprite(0,0,"ship_idle"),this.elements.ship.setScale(.8),this.elements.ship.setDepth(2),this.elements.ship.play("ship_thrust"),this.elements.ship.body.setCircle(20),this.elements.ship.setMaxVelocity(200),this.elements.ship.health=50,this.elements.ship.maxHealth=50,this.cameras.main.setZoom(.6),this.cameras.main.centerOn(0,0),this.projectilesGroup=this.physics.add.group(),console.log("Nave criada em (0, 0)")}createEnemies(){for(let e=0;e<3;e++)this.spawnEnemy();this.time.addEvent({delay:8e3,callback:()=>{this.elements.enemies.length<4&&this.spawnEnemy()},loop:!0})}spawnEnemy(){const e=this.scale.width,t=this.scale.height,a=n.Math.Between(0,3);let s,l;switch(a){case 0:s=n.Math.Between(-e/2,e/2),l=-t/2-50;break;case 1:s=e/2+50,l=n.Math.Between(-t/2,t/2);break;case 2:s=n.Math.Between(-e/2,e/2),l=t/2+50;break;case 3:s=-e/2-50,l=n.Math.Between(-t/2,t/2);break}const i=this.physics.add.sprite(s,l,"enemy");i.setScale(n.Math.FloatBetween(.4,.6)),i.setDepth(1),i.play("enemy_thrust"),i.body.setCircle(40),i.setMaxVelocity(100),i.body.setImmovable(!0),i.health=10,i.maxHealth=10;const r=n.Math.FloatBetween(0,Math.PI*2),m=n.Math.Between(5,10);i.setVelocity(Math.cos(r)*m,Math.sin(r)*m),i.rotation=r+Math.PI/2,this.elements.enemies.push(i)}createMeteors(){for(let e=0;e<2;e++)this.spawnMeteor();this.time.addEvent({delay:6e3,callback:()=>{this.elements.meteors.length<3&&this.spawnMeteor()},loop:!0})}spawnMeteor(){const e=this.scale.width,t=this.scale.height,a=n.Math.Between(0,3);let s,l;switch(a){case 0:s=n.Math.Between(-e/2,e/2),l=-t/2-50;break;case 1:s=e/2+50,l=n.Math.Between(-t/2,t/2);break;case 2:s=n.Math.Between(-e/2,e/2),l=t/2+50;break;case 3:s=-e/2-50,l=n.Math.Between(-t/2,t/2);break}const i=this.physics.add.sprite(s,l,"meteoro","meteoro 0.aseprite");i.setScale(n.Math.FloatBetween(.5,.8)),i.setDepth(1),i.play("meteoro_anim"),i.body.setCircle(25),i.setMaxVelocity(300);const r=n.Math.Between(-150,150),m=n.Math.Between(-150,150),o=n.Math.Angle.Between(s,l,r,m),h=n.Math.Between(100,200);i.setVelocity(Math.cos(o)*h,Math.sin(o)*h),i.rotation=o+Math.PI/2,this.elements.meteors.push(i)}createPlanets(){if(this.elements.planets.length>0){console.log("Planetas j√° criados, pulando cria√ß√£o...");return}const e=this.scale.width,t=this.scale.height,a=this.textures.get("planets").getFrameNames().filter(o=>o!=="__BASE"),s=[],l=150,i=200,r=.7,m=(o,h)=>{if(n.Math.Distance.Between(0,0,o,h)<l)return!1;for(const c of s)if(n.Math.Distance.Between(o,h,c.x,c.y)<i)return!1;return!0};for(let o=0;o<Math.min(4,a.length);o++){let h,c,d=0;const u=100;do{if(Math.random()<r)switch(n.Math.Between(0,3)){case 0:h=n.Math.Between(-e/2-100,-e/2+50),c=n.Math.Between(-t/2,t/2);break;case 1:h=n.Math.Between(e/2-50,e/2+100),c=n.Math.Between(-t/2,t/2);break;case 2:h=n.Math.Between(-e/2,e/2),c=n.Math.Between(-t/2-100,-t/2+50);break;case 3:h=n.Math.Between(-e/2,e/2),c=n.Math.Between(t/2-50,t/2+100);break}else h=n.Math.Between(-e/2+100,e/2-100),c=n.Math.Between(-t/2+100,t/2-100);d++}while(d<u&&!m(h,c));if(d>=u)switch(console.log(`Planeta ${o}: Tentativas esgotadas, usando posi√ß√£o padr√£o`),n.Math.Between(0,3)){case 0:h=-e/2+50,c=n.Math.Between(-t/2,t/2);break;case 1:h=e/2-50,c=n.Math.Between(-t/2,t/2);break;case 2:h=n.Math.Between(-e/2,e/2),c=-t/2+50;break;case 3:h=n.Math.Between(-e/2,e/2),c=t/2-50;break}s.push({x:h,y:c}),console.log(`Planeta ${o} posicionado em (${h.toFixed(1)}, ${c.toFixed(1)}) ap√≥s ${d} tentativas`)}for(let o=0;o<s.length;o++){const h=s[o],c=a[o%a.length],d=this.add.image(h.x,h.y,"planets",c);d.setScale(n.Math.FloatBetween(1,1.5)),d.setDepth(-.5),this.elements.planets.push(d),console.log(`Planeta ${o} criado em (${h.x.toFixed(1)}, ${h.y.toFixed(1)}) com frame ${c}`)}this.planetPositions=s,console.log(`Total de planetas criados: ${this.elements.planets.length}`)}setupCollisions(){this.physics.add.overlap(this.projectilesGroup,this.elements.enemies,(e,t)=>{if(!e.active||!t.active)return;t.health-=1,e.destroy();const a=this.elements.bullets.indexOf(e);if(a>-1&&this.elements.bullets.splice(a,1),t.health<=0){this.createExplosion(t.x,t.y),this.playSound("explosion_sound",.1);const s=this.elements.enemies.indexOf(t);s>-1&&this.elements.enemies.splice(s,1),t.destroy()}else t.setTint(16711680),this.time.delayedCall(100,()=>{t.active&&t.clearTint()}),this.playSound("bullet_sound",.05)}),this.physics.add.overlap(this.projectilesGroup,this.elements.meteors,(e,t)=>{if(!e.active||!t.active)return;e.destroy();const a=this.elements.bullets.indexOf(e);a>-1&&this.elements.bullets.splice(a,1),this.createExplosion(t.x,t.y),this.playSound("explosion_sound",.08);const s=this.elements.meteors.indexOf(t);s>-1&&this.elements.meteors.splice(s,1),t.destroy()}),this.physics.add.overlap(this.elements.ship,this.elements.enemies,(e,t)=>{if(!(!e.active||!t.active))if(e.health-=5,e.health<=0){this.createExplosion(e.x,e.y),this.playSound("explosion_sound",.15);const a=this.elements.enemies.indexOf(t);a>-1&&this.elements.enemies.splice(a,1),t.destroy(),this.time.delayedCall(2e3,()=>{e.setPosition(0,0),e.health=e.maxHealth,e.clearTint()})}else e.setTint(16711680),this.time.delayedCall(200,()=>{e.active&&e.clearTint()})}),this.physics.add.overlap(this.elements.ship,this.elements.meteors,(e,t)=>{if(!(!e.active||!t.active))if(e.health-=10,e.health<=0){this.createExplosion(e.x,e.y),this.playSound("explosion_sound",.12);const a=this.elements.meteors.indexOf(t);a>-1&&this.elements.meteors.splice(a,1),t.destroy(),this.time.delayedCall(2e3,()=>{e.setPosition(0,0),e.health=e.maxHealth,e.clearTint()})}else e.setTint(16711680),this.time.delayedCall(200,()=>{e.active&&e.clearTint()})})}playSound(e,t=.1){try{this.sound.add(e,{volume:t}).play()}catch{console.log("Som n√£o dispon√≠vel:",e)}}createExplosion(e,t){const a=this.add.sprite(e,t,"explosion","explosion 0.aseprite");a.setScale(1.2),a.setDepth(3),a.play("explosion_anim"),this.elements.explosions.push(a),a.once("animationcomplete",()=>{const s=this.elements.explosions.indexOf(a);s>-1&&this.elements.explosions.splice(s,1),a.destroy()})}moveToNextPlanet(){if(!this.planetPositions||this.planetPositions.length===0)return;let e;do e=n.Math.Between(0,this.planetPositions.length-1);while(e===this.currentPlanetIndex&&this.planetPositions.length>1);this.currentPlanetIndex=e,this.targetPlanet=this.planetPositions[e],console.log(`Nave navegando para planeta ${e} em (${this.targetPlanet.x}, ${this.targetPlanet.y})`)}startSimulation(){this.currentPlanetIndex=0,this.moveToNextPlanet(),this.time.addEvent({delay:16,callback:()=>{if(this.elements.ship&&this.targetPlanet){const e=this.elements.ship,t=this.targetPlanet,a=n.Math.Distance.Between(e.x,e.y,t.x,t.y);if(a<80)this.moveToNextPlanet();else{const l=n.Math.Angle.Between(e.x,e.y,t.x,t.y),i=.016;e.x+=Math.cos(l)*12*i,e.y+=Math.sin(l)*12*i,Math.random()<.01&&console.log(`Nave: (${e.x.toFixed(1)}, ${e.y.toFixed(1)}) -> Planeta: (${t.x}, ${t.y}) | Dist√¢ncia: ${a.toFixed(1)}`)}}},loop:!0}),this.time.addEvent({delay:100,callback:()=>{this.updateDefenseSystem()},loop:!0}),this.time.addEvent({delay:4e3,callback:()=>{this.createRandomExplosion()},loop:!0}),this.time.addEvent({delay:3e3,callback:()=>{this.elements.enemies.length<3&&this.spawnEnemy()},loop:!0}),this.time.addEvent({delay:4e3,callback:()=>{this.elements.meteors.length<2&&this.spawnMeteor()},loop:!0})}fireBullet(){if(!this.elements.ship)return;const e=this.elements.ship.rotation-Math.PI/2,t=Math.cos(e)*30,a=Math.sin(e)*30,s=this.projectilesGroup.create(this.elements.ship.x+t,this.elements.ship.y+a,"minibullet","minibullet 0.aseprite");s.setScale(.6),s.setDepth(1),s.play("minibullet_anim"),s.rotation=e,s.body.setAllowGravity(!1),s.body.setCircle(20),s.setMaxVelocity(300),s.setVelocity(Math.cos(e)*240,Math.sin(e)*240),this.elements.bullets.push(s),this.playSound("bullet_sound",.05),this.time.delayedCall(3e3,()=>{if(s.active){this.createExplosion(s.x,s.y),this.playSound("explosion_sound",.03);const l=this.elements.bullets.indexOf(s);l>-1&&this.elements.bullets.splice(l,1),s.destroy()}})}createRandomExplosion(){const e=n.Math.Between(-800,800),t=n.Math.Between(-600,600);this.createExplosion(e,t)}updateDefenseSystem(){if(!this.elements.ship)return;const e=this.elements.ship,t=300;if(this.lastFireTime&&this.time.now-this.lastFireTime<500)return;let s=null,l=t;this.elements.enemies.forEach(o=>{if(o.active){const h=n.Math.Distance.Between(e.x,e.y,o.x,o.y);h<l&&(s=o,l=h)}});let i=null,r=t;this.elements.meteors.forEach(o=>{if(o.active){const h=n.Math.Distance.Between(e.x,e.y,o.x,o.y);h<r&&(i=o,r=h)}});let m=null;if(s&&i?m=l<r?s:i:s?m=s:i&&(m=i),m){const o=n.Math.Angle.Between(e.x,e.y,m.x,m.y);e.rotation=o+Math.PI/2,this.fireAtTarget(m),this.lastFireTime=this.time.now}else if(this.targetPlanet){const o=n.Math.Angle.Between(e.x,e.y,this.targetPlanet.x,this.targetPlanet.y);e.rotation=o+Math.PI/2}else e.rotation=0}fireAtTarget(e){if(!this.elements.ship)return;const t=this.elements.ship,a=n.Math.Angle.Between(t.x,t.y,e.x,e.y),s=Math.cos(a)*30,l=Math.sin(a)*30,i=this.projectilesGroup.create(t.x+s,t.y+l,"minibullet","minibullet 0.aseprite");i.setScale(.6),i.setDepth(1),i.play("minibullet_anim"),i.rotation=a,i.body.setAllowGravity(!1),i.body.setCircle(20),i.setMaxVelocity(300),i.setVelocity(Math.cos(a)*240,Math.sin(a)*240),this.elements.bullets.push(i),this.playSound("bullet_sound",.05),this.time.delayedCall(3e3,()=>{if(i.active){const r=this.elements.bullets.indexOf(i);r>-1&&this.elements.bullets.splice(r,1),i.destroy()}})}updateSimulation(){for(let e=this.elements.enemies.length-1;e>=0;e--){const t=this.elements.enemies[e];if(t.active){const a=this.scale.width,s=this.scale.height,l=100;(t.x<-a/2-l||t.x>a/2+l||t.y<-s/2-l||t.y>s/2+l)&&(this.elements.enemies.splice(e,1),t.destroy())}}for(let e=this.elements.meteors.length-1;e>=0;e--){const t=this.elements.meteors[e];if(t.active){const a=this.scale.width,s=this.scale.height,l=100;if(t.x<-a/2-l||t.x>a/2+l||t.y<-s/2-l||t.y>s/2+l)this.elements.meteors.splice(e,1),t.destroy();else{const i=t.body.velocity;if(i.x!==0||i.y!==0){const r=Math.atan2(i.y,i.x);t.rotation=r+Math.PI/2}}}}this.elements.bullets.forEach(e=>{e.active}),this.elements.planets.forEach(e=>{e.rotation+=.001})}pauseSimulation(){this.physics.pause(),this.scene.pause()}resumeSimulation(){this.physics.resume(),this.scene.resume()}destroySimulation(){this.elements.enemies.forEach(e=>{e.destroy()}),this.elements.meteors.forEach(e=>e.destroy()),this.elements.bullets.forEach(e=>{e.destroy()}),this.elements.explosions.forEach(e=>e.destroy()),this.elements.planets.forEach(e=>e.destroy()),this.elements.ship&&this.elements.ship.destroy(),this.elements.enemies=[],this.elements.meteors=[],this.elements.bullets=[],this.elements.explosions=[],this.elements.planets=[],console.log("üéÆ Simula√ß√£o de gameplay destru√≠da")}update(){this.starsBg&&(this.starsBg.tilePositionX+=.1,this.starsBg.tilePositionY+=.05),this.updateSimulation()}}const g={type:Phaser.AUTO,width:window.innerWidth,height:window.innerHeight,backgroundColor:"#000011",physics:{default:"arcade",arcade:{gravity:{x:0,y:0},debug:!1}},scene:[y],scale:{mode:Phaser.Scale.RESIZE,autoCenter:Phaser.Scale.CENTER_BOTH,fullscreenTarget:"simulation-container"},parent:"simulation-container"};document.addEventListener("DOMContentLoaded",function(){console.log("üéÆ Starting gameplay simulation background...");try{const p=new Phaser.Game(g);window.gameplaySimulation=p,console.log("‚úÖ Gameplay simulation background started!"),window.addEventListener("resize",()=>{p.scale.resize(window.innerWidth,window.innerHeight)}),p.events.once("ready",()=>{const e=p.canvas;e&&(e.style.width="100vw",e.style.height="100vh",e.style.display="block",e.style.position="absolute",e.style.top="0",e.style.left="0",e.style.opacity="0.6",e.style.pointerEvents="none")})}catch(p){console.error("‚ùå Error initializing simulation:",p)}});
