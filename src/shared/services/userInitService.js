/**
 * UserInitService - Garante que todos os dados do usu√°rio est√£o inicializados
 * 
 * Este servi√ßo verifica se o usu√°rio tem todos os dados necess√°rios nas tabelas
 * relacionadas e, se n√£o tiver, chama a fun√ß√£o initialize_user_data para cri√°-los.
 * 
 * Deve ser chamado em TODAS as p√°ginas autenticadas antes de carregar dados do usu√°rio.
 */

/**
 * Verifica se o usu√°rio tem todos os dados inicializados e, se n√£o tiver, inicializa
 * 
 * @param {Object} supabase - Cliente Supabase
 * @param {string} googleEmail - Email do usu√°rio do Google
 * @param {Object} user - Objeto user do Supabase auth (opcional, para metadata)
 * @returns {Promise<{success: boolean, message: string, profile_id: string}>}
 */
export async function ensureUserInitialized(supabase, googleEmail, user = null) {
  try {
    console.log('üîç Verificando inicializa√ß√£o do usu√°rio:', googleEmail);

    // 1. Verificar se o perfil existe
    const { data: profile, error: profileError } = await supabase
      .from('user_profiles')
      .select('id')
      .eq('google_email', googleEmail)
      .maybeSingle();

    if (profileError) {
      console.error('‚ùå Erro ao verificar perfil:', profileError);
      throw new Error('Failed to check user profile: ' + profileError.message);
    }

    // Se o perfil existe, assumimos que os dados est√£o inicializados
    if (profile) {
      console.log('‚úÖ Usu√°rio j√° inicializado. Profile ID:', profile.id);
      return {
        success: true,
        message: 'User already initialized',
        profile_id: profile.id
      };
    }

    // 2. Perfil n√£o existe - precisamos inicializar
    console.log('‚ö†Ô∏è Perfil n√£o encontrado. Inicializando dados do usu√°rio...');

    // Preparar dados para inicializa√ß√£o
    const displayName = user?.user_metadata?.name || user?.user_metadata?.full_name || googleEmail.split('@')[0];
    const avatarUrl = user?.user_metadata?.picture || user?.user_metadata?.avatar_url || null;
    const authUserId = user?.id || null;

    // 3. Chamar fun√ß√£o RPC para inicializar todos os dados
    const { data: initResult, error: initError } = await supabase
      .rpc('initialize_user_data', {
        p_google_email: googleEmail,
        p_display_name: displayName,
        p_avatar_url: avatarUrl,
        p_auth_user_id: authUserId
      });

    if (initError) {
      console.error('‚ùå Erro ao inicializar dados do usu√°rio:', initError);
      throw new Error('Failed to initialize user data: ' + initError.message);
    }

    // 4. Verificar resultado
    if (!initResult || initResult.length === 0) {
      console.error('‚ùå Nenhum resultado retornado da inicializa√ß√£o');
      throw new Error('No result returned from initialization');
    }

    const result = initResult[0];
    
    if (!result.success) {
      console.error('‚ùå Falha na inicializa√ß√£o:', result.message);
      throw new Error('Initialization failed: ' + result.message);
    }

    console.log('‚úÖ Dados do usu√°rio inicializados com sucesso!');
    console.log('üìä IDs criados:', {
      profile_id: result.profile_id,
      settings_id: result.settings_id,
      stats_id: result.stats_id,
      wallet_id: result.wallet_id
    });

    return {
      success: true,
      message: result.message,
      profile_id: result.profile_id,
      settings_id: result.settings_id,
      stats_id: result.stats_id,
      wallet_id: result.wallet_id
    };

  } catch (error) {
    console.error('‚ùå Erro em ensureUserInitialized:', error);
    throw error;
  }
}

/**
 * Wrapper simples para verificar e inicializar usu√°rio
 * Retorna o profile_id ou lan√ßa erro
 * 
 * @param {Object} supabase - Cliente Supabase
 * @param {string} googleEmail - Email do usu√°rio
 * @param {Object} user - Objeto user do Supabase auth (opcional)
 * @returns {Promise<string>} - Profile ID
 */
export async function getOrCreateUserProfile(supabase, googleEmail, user = null) {
  const result = await ensureUserInitialized(supabase, googleEmail, user);
  return result.profile_id;
}

export default {
  ensureUserInitialized,
  getOrCreateUserProfile
};

